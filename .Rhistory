"summ_max_ht_above_wl", "summ_max_depth_below_wl", "summ_inu_pct", "summ_inu_pct_sq")
wint_2050_nodredge_RCP8_elnino <- inundation(elv = elv_m_2050_ND_RCP8, lev = lev_2100_elnino_RCP8[lev_2100_elnino_RCP8$season=="W",])
names(wint_2050_nodredge_RCP8_elnino) <- c("wint_avg_ht_above_m", "wint_avg_ht_below_m", "wint_avg_ht",
"wint_max_ht_above_wl", "wint_max_depth_below_wl", "wint_inu_pct", "wint_inu_pct_sq")
inun_metrics_2050_nodredge_RCP8_elnino <- stack(summ_2050_nodredge_RCP8_elnino, wint_2050_nodredge_RCP8_elnino, elv_m_2050_ND_RCP8)
names(inun_metrics_2050_nodredge_RCP8_elnino[[15]]) <- "elv_m"
inun_metrics_2050_nodredge_RCP8_elnino <- writeRaster(inun_metrics_2050_nodredge_RCP8_elnino, "C:/Users/JennyT/Documents/LitReview/UCI/working data/_2050_ND_RCP8_elnino_inun_metrics_.grd")
#NoDredge, RCP8.5, 2050, Normal , MSL
summ_2050_nodredge_RCP8_normal <- inundation(elv = elv_m_2050_ND_RCP8, lev = lev_2100_normal_RCP8[lev_2100_normal_RCP8$season=="S",])
names(summ_2050_nodredge_RCP8_normal) <- c("summ_avg_ht_above_m", "summ_avg_ht_below_m", "summ_avg_ht",
"summ_max_ht_above_wl", "summ_max_depth_below_wl", "summ_inu_pct", "summ_inu_pct_sq")
wint_2050_nodredge_RCP8_normal <- inundation(elv = elv_m_2050_ND_RCP8, lev = lev_2100_normal_RCP8[lev_2100_normal_RCP8$season=="W",])
names(wint_2050_nodredge_RCP8_normal) <- c("wint_avg_ht_above_m", "wint_avg_ht_below_m", "wint_avg_ht",
"wint_max_ht_above_wl", "wint_max_depth_below_wl", "wint_inu_pct", "wint_inu_pct_sq")
inun_metrics_2050_nodredge_RCP8_normal <- stack(summ_2050_nodredge_RCP8_normal, wint_2050_nodredge_RCP8_normal, elv_m_2050_ND_RCP8)
names(inun_metrics_2050_nodredge_RCP8_normal[[15]]) <- "elv_m"
inun_metrics_2050_nodredge_RCP8_normal <- writeRaster(inun_metrics_2050_nodredge_RCP8_normal, "C:/Users/JennyT/Documents/LitReview/UCI/working data/_2050_ND_RCP8_normal_inun_metrics_.grd")
#NoDredge, RCP4.5, 2050, El Nino , MSL
summ_2050_nodredge_RCP4_elnino <- inundation(elv = elv_m_2050_ND_RCP4, lev = lev_2100_elnino_RCP4[lev_2100_elnino_RCP4$season=="S",])
names(summ_2050_nodredge_RCP4_elnino) <- c("summ_avg_ht_above_m", "summ_avg_ht_below_m", "summ_avg_ht",
"summ_max_ht_above_wl", "summ_max_depth_below_wl", "summ_inu_pct", "summ_inu_pct_sq")
wint_2050_nodredge_RCP4_elnino <- inundation(elv = elv_m_2050_ND_RCP4, lev = lev_2100_elnino_RCP4[lev_2100_elnino_RCP4$season=="W",])
names(wint_2050_nodredge_RCP4_elnino) <- c("wint_avg_ht_above_m", "wint_avg_ht_below_m", "wint_avg_ht",
"wint_max_ht_above_wl", "wint_max_depth_below_wl", "wint_inu_pct", "wint_inu_pct_sq")
inun_metrics_2050_nodredge_RCP4_elnino <- stack(summ_2050_nodredge_RCP4_elnino, wint_2050_nodredge_RCP4_elnino, elv_m_2050_ND_RCP4)
names(inun_metrics_2050_nodredge_RCP4_elnino[[15]]) <- "elv_m"
inun_metrics_2050_nodredge_RCP4_elnino <- writeRaster(inun_metrics_2050_nodredge_RCP4_elnino, "C:/Users/JennyT/Documents/LitReview/UCI/working data/_2050_ND_RCP4_elnino_inun_metrics_.grd")
#NoDredge, RCP4.5, 2050, Normal  , MSL
summ_2050_nodredge_RCP4_normal <- inundation(elv = elv_m_2050_ND_RCP4, lev = lev_2100_normal_RCP4[lev_2100_normal_RCP4$season=="S",])
names(summ_2050_nodredge_RCP4_normal) <- c("summ_avg_ht_above_m", "summ_avg_ht_below_m", "summ_avg_ht",
"summ_max_ht_above_wl", "summ_max_depth_below_wl", "summ_inu_pct", "summ_inu_pct_sq")
wint_2050_nodredge_RCP4_normal <- inundation(elv = elv_m_2050_ND_RCP4, lev = lev_2100_normal_RCP4[lev_2100_normal_RCP4$season=="W",])
names(wint_2050_nodredge_RCP4_normal) <- c("wint_avg_ht_above_m", "wint_avg_ht_below_m", "wint_avg_ht",
"wint_max_ht_above_wl", "wint_max_depth_below_wl", "wint_inu_pct", "wint_inu_pct_sq")
inun_metrics_2050_nodredge_RCP4_normal <- stack(summ_2050_nodredge_RCP4_normal, wint_2050_nodredge_RCP4_normal, elv_m_2050_ND_RCP4)
names(inun_metrics_2050_nodredge_RCP4_normal[[15]]) <- "elv_m"
inun_metrics_2050_nodredge_RCP4_normal <- writeRaster(inun_metrics_2050_nodredge_RCP4_normal, "C:/Users/JennyT/Documents/LitReview/UCI/working data/_2050_ND_RCP4_normal_inun_metrics_.grd")
library(raster)
library(tidyverse)
library(lubridate)
library(readxl)
library(sf)
library(caret)
library(sp)
library(rgeos)
#Bss location data
load("C:/Users/JennyT/Documents/LitReview/UCI/working data/FinalData/rail_beld_elv_veg.RData")
bss_dat <- dat %>%
dplyr::select(UID:spar_num_pairs) %>%
filter(year == 2015)
rm(dat)
#read in UNB file to make the bird data spatial
UNB <- st_read("C:/Users/JennyT/Documents/LitReview/UCI/working data/FinalData/UNB_Grid.shp")
bss_dat <- left_join(UNB, bss_dat, by = "UID")
plot(bss_dat["spar_num_pairs"], main = "BSS Occupancy (2015)", key.pos = 1,
key.width = lcm(1.3), key.length = 0.5)
#crop the bird data to be just where veg data is
veg_boundary <- st_read("C:/Users/JennyT/Documents/LitReview/UCI/working data/UNB Vegetation/Veg_boundary.shp")
veg_boundary <- as(veg_boundary, "Spatial") #veg boundary convert to spatial object
bird_dat_sp <- as(bss_dat, "Spatial")#convert bird object to spatial for cropping
veg_boundary <- spTransform(veg_boundary, CRSobj = crs(bird_dat_sp))
bird_dat_sp <- raster::intersect(veg_boundary, bird_dat_sp ) #crop to extent
plot(bird_dat_sp)
bss_dat <- st_as_sf(bird_dat_sp)
plot(bss_dat["spar_num_pairs"])
zero_pts <- SpatialPointsDataFrame(gCentroid(as(bss_dat, "Spatial"), byid = TRUE), data = data.frame(bss_dat)) #use the bss_dat before cropping
plot(zero_pts[zero_pts$spar_num_pairs==0,])
zero_pts <- st_as_sf(zero_pts) %>%
filter(spar_num_pairs == 0) %>%
dplyr::select(marsh, year, spar_num_pairs)
zero_pts[,"Species"] <- "Belding's Savannah Sparrow"
plot(zero_pts['spar_num_pairs'])
bss_pt <- st_read("C:/Users/JennyT/Documents/LitReview/UCI/working data/RailBeldData_pt.shp") %>%
dplyr::select(year, Species, marsh) %>%
filter(year == 2015, marsh == "Upper Newport Bay", Species == "Belding's Savannah Sparrow")
bss_pt <- st_transform(bss_pt, crs = crs(zero_pts))
bss_pt[,"spar_num_pairs"] <- 1
bss_pt <- rbind(bss_pt, zero_pts)
plot(bss_pt["spar_num_pairs"])
bss_pt_fullmarsh <- bss_pt
#crop the bird data to be just where veg data is
veg_boundary <- st_read("C:/Users/JennyT/Documents/LitReview/UCI/working data/UNB Vegetation/Veg_boundary.shp")
veg_boundary <- as(veg_boundary, "Spatial") #veg boundary convert to spatial object
bird_dat_sp <- as(bss_pt, "Spatial")#convert bird object to spatial for cropping
veg_boundary <- spTransform(veg_boundary, CRSobj = crs(bird_dat_sp))
bird_dat_sp <- raster::crop(bird_dat_sp,veg_boundary ) #crop to extent
plot(bird_dat_sp)
bss_pt <- st_as_sf(bird_dat_sp)
plot(bss_pt["spar_num_pairs"]) #this is presence and absence BSS file for model training!!!
load("C:/Users/JennyT/Documents/LitReview/UCI/working data/bss_pt.RData")
inun_metrics_13 <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/_2013_inun_metrics_.grd")
inun_metrics_14 <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/_2014_inun_metrics_.grd")
inun_metrics_15 <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/_2015_inun_metrics_.grd")
summ_inu_pct_15 <- inun_metrics_15$summ_inu_pct
#make a weight matrix with the focalWeight function.
buffer_radius <- 5
fw_5m <- focalWeight(summ_inu_pct_15, buffer_radius, type = "circle")
#recale weight matrix to 1/0 for calculations
fw_5m <- ifelse(fw_5m>0,1,0)
#mean value for percent of summer inundated
mean_summ_inu_pct_15 <- focal(summ_inu_pct_15, w = fw_5m, fun = mean, na.rm = TRUE)
#95th percentile
#function for 95th percentile
nintyfifthpercentile <- function(x,...){
d <- quantile(x, probs = 0.95, na.rm = TRUE)
return(d)
}
ninyfifthperc_summ_inu__pct_15 <- focal(summ_inu_pct_15, w = fw_50m, fun = nintyfifthpercentile, na.rm = TRUE)
dat <- cbind(bss_pt, raster::extract(x = mean_summ_inu_pct_15, y = bss_pt))
dat <- cbind(dat, raster::extract(x = ninyfifthperc_summ_inu__pct_15, y = bss_pt))
dat <- cbind(dat, raster::extract(x = summ_inu_pct_15, y = bss_pt))
ninyfifthperc_summ_inu__pct_15 <- focal(summ_inu_pct_15, w = fw_5m, fun = nintyfifthpercentile, na.rm = TRUE)
dat <- cbind(bss_pt, raster::extract(x = mean_summ_inu_pct_15, y = bss_pt))
dat <- cbind(dat, raster::extract(x = ninyfifthperc_summ_inu__pct_15, y = bss_pt))
dat <- cbind(dat, raster::extract(x = summ_inu_pct_15, y = bss_pt))
names(dat)[5:7] <-c("mean_summ_inu_pct", "ntyfth_summ_inu_pct", "summ_inu_pct")
ggplot(data = dat, mapping = aes(x = ntyfth_summ_inu_pct, fill = as.factor(spar_num_pairs)))+
geom_histogram(position = "stack")
View(dat)
num<-5:7
bss_dat <- data.frame(dat)
bss_pval<-NULL
for (i in num){
mod <- glm(spar_num_pairs ~ bss_dat[,i] , family= "binomial", data= bss_dat)
bss_pval <- rbind(bss_pval, data.frame("pval"= coef(summary(mod))[2,4], "variable"= names(bss_dat[i])))
}
bss_pval <- bss_pval[order(bss_pval$pval),]
View(bss_pval)
summary(bss_mdl <- glm(data = dat, family = "binomial", spar_num_pairs ~ mean_summ_inu_pct))
ggplot(data = dat, mapping = aes(x = as.factor(spar_num_pairs), y = mean_summ_inu_pct))+
geom_violin()+
geom_boxplot(width = .2)
mean_summ_inun_perc_function <-
function(rasterstack){
summ_inu_pct <- rasterstack$summ_inu_pct
#make a weight matrix with the focalWeight function.
buffer_radius <- 5
fw_5m <- focalWeight(summ_inu_pct, buffer_radius, type = "circle")
#recale weight matrix to 1/0 for calculations
fw_5m <- ifelse(fw_5m>0,1,0)
#mean value for percent of summer inundated
mean_summ_inu_pct <- focal(summ_inu_pct, w = fw_5m, fun = mean, na.rm = TRUE)
names(mean_summ_inu_pct) <- "mean_summ_inu_pct"
return(mean_summ_inu_pct)
}
#2015 baseline year for validation with Delft3d
inun_metrics_2015_delft3D  <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/__2015_delft3D_inun_metrics_.grd")
values(inun_metrics_2015_delft3D$summ_inu_pct) <- ifelse(values(inun_metrics_2015_delft3D$summ_inu_pct>0.292122), NA, values(inun_metrics_2015_delft3D$summ_inu_pct))
inun_metrics_2015_delft3D <- mean_summ_inun_perc_function(inun_metrics_2015_delft3D)
bss_predict_2015_delft3D <- raster::predict(object = inun_metrics_2015_delft3D, bss_mdl, type = "response")
plot(bss_predict_2015_delft3D)
load("C:/Users/JennyT/Documents/LitReview/UCI/working data/bss_pt_fullmarsh.RData")
bss_pt_fullmarsh <- st_transform(bss_pt_fullmarsh, crs = crs(bss_predict_2015_delft3D))
crs(bss_pt_fullmarsh)
bss_pt_fullmarsh <- cbind(bss_pt_fullmarsh, raster::extract(x = bss_predict_2015_delft3D, y = bss_pt_fullmarsh))
ggplot(data = bss_pt_fullmarsh, mapping = aes(x = as.factor(spar_num_pairs), y = raster..extract.x...bss_predict_2015_delft3D..y...bss_pt_fullmarsh.))+
geom_boxplot()
View(bss_pt_fullmarsh)
names(bss_bss_pt_fullmarsh)[5] <- "Predicted_Prob"
names(bss_pt_fullmarsh)[5] <- "Predicted_Prob"
ggplot(data = bss_pt_fullmarsh, mapping = aes(x = as.factor(spar_num_pairs), y = Predicted_Prob))+
geom_boxplot()
table(bss_pt_fullmarsh$spar_num_pairs)
plot(bss_pt_fullmarsh["geometry"])
#Bss location data
load("C:/Users/JennyT/Documents/LitReview/UCI/working data/FinalData/rail_beld_elv_veg.RData")
bss_dat <- dat %>%
dplyr::select(UID:spar_num_pairs) %>%
filter(year == 2015)
rm(dat)
#read in UNB file to make the bird data spatial
UNB <- st_read("C:/Users/JennyT/Documents/LitReview/UCI/working data/FinalData/UNB_Grid.shp")
bss_dat <- left_join(UNB, bss_dat, by = "UID")
plot(bss_dat["spar_num_pairs"], main = "BSS Occupancy (2015)", key.pos = 1,
key.width = lcm(1.3), key.length = 0.5)
zero_pts <- SpatialPointsDataFrame(gCentroid(as(bss_dat, "Spatial"), byid = TRUE), data = data.frame(bss_dat)) #use the bss_dat before cropping
plot(zero_pts[zero_pts$spar_num_pairs==0,])
zero_pts <- st_as_sf(zero_pts) %>%
filter(spar_num_pairs == 0) %>%
dplyr::select(marsh, year, spar_num_pairs)
zero_pts[,"Species"] <- "Belding's Savannah Sparrow"
plot(zero_pts['spar_num_pairs'])
bss_pt <- st_read("C:/Users/JennyT/Documents/LitReview/UCI/working data/RailBeldData_pt.shp") %>%
dplyr::select(year, Species, marsh) %>%
filter(year == 2015, marsh == "Upper Newport Bay", Species == "Belding's Savannah Sparrow")
bss_pt <- st_transform(bss_pt, crs = crs(zero_pts))
bss_pt[,"spar_num_pairs"] <- 1
bss_pt <- rbind(bss_pt, zero_pts)
plot(bss_pt["spar_num_pairs"])
bss_pt_fullmarsh <- bss_pt
save(bss_pt_fullmarsh, file = "C:/Users/JennyT/Documents/LitReview/UCI/working data/bss_pt_fullmarsh.RData")
#crop the bird data to be just where veg data is
veg_boundary <- st_read("C:/Users/JennyT/Documents/LitReview/UCI/working data/UNB Vegetation/Veg_boundary.shp")
veg_boundary <- as(veg_boundary, "Spatial") #veg boundary convert to spatial object
bird_dat_sp <- as(bss_pt, "Spatial")#convert bird object to spatial for cropping
veg_boundary <- spTransform(veg_boundary, CRSobj = crs(bird_dat_sp))
bird_dat_sp <- raster::crop(bird_dat_sp,veg_boundary ) #crop to extent
plot(bird_dat_sp)
bss_pt <- st_as_sf(bird_dat_sp)
plot(bss_pt["spar_num_pairs"]) #this is presence and absence BSS file for model training!!!
save(bss_pt, file = "C:/Users/JennyT/Documents/LitReview/UCI/working data/bss_pt.RData")
load("C:/Users/JennyT/Documents/LitReview/UCI/working data/bss_pt.RData")
inun_metrics_13 <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/_2013_inun_metrics_.grd")
inun_metrics_14 <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/_2014_inun_metrics_.grd")
inun_metrics_15 <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/_2015_inun_metrics_.grd")
summ_inu_pct_15 <- inun_metrics_15$summ_inu_pct
#make a weight matrix with the focalWeight function.
buffer_radius <- 5
fw_5m <- focalWeight(summ_inu_pct_15, buffer_radius, type = "circle")
#recale weight matrix to 1/0 for calculations
fw_5m <- ifelse(fw_5m>0,1,0)
#mean value for percent of summer inundated
mean_summ_inu_pct_15 <- focal(summ_inu_pct_15, w = fw_5m, fun = mean, na.rm = TRUE)
#95th percentile
#function for 95th percentile
nintyfifthpercentile <- function(x,...){
d <- quantile(x, probs = 0.95, na.rm = TRUE)
return(d)
}
ninyfifthperc_summ_inu__pct_15 <- focal(summ_inu_pct_15, w = fw_5m, fun = nintyfifthpercentile, na.rm = TRUE)
dat <- cbind(bss_pt, raster::extract(x = mean_summ_inu_pct_15, y = bss_pt))
dat <- cbind(dat, raster::extract(x = ninyfifthperc_summ_inu__pct_15, y = bss_pt))
dat <- cbind(dat, raster::extract(x = summ_inu_pct_15, y = bss_pt))
names(dat)[5:7] <-c("mean_summ_inu_pct", "ntyfth_summ_inu_pct", "summ_inu_pct")
ggplot(data = dat, mapping = aes(x = ntyfth_summ_inu_pct, fill = as.factor(spar_num_pairs)))+
geom_histogram(position = "stack")
num<-5:7
bss_dat <- data.frame(dat)
bss_pval<-NULL
for (i in num){
mod <- glm(spar_num_pairs ~ bss_dat[,i] , family= "binomial", data= bss_dat)
bss_pval <- rbind(bss_pval, data.frame("pval"= coef(summary(mod))[2,4], "variable"= names(bss_dat[i])))
}
bss_pval <- bss_pval[order(bss_pval$pval),]
plot(bss_pt["spar_num_pairs"]) #this is presence and absence BSS file for model training!!!
summary(bss_mdl <- glm(data = dat, family = "binomial", spar_num_pairs ~ mean_summ_inu_pct))
ggplot(data = dat, mapping = aes(x = as.factor(spar_num_pairs), y = mean_summ_inu_pct))+
geom_violin()+
geom_boxplot(width = .2)
count(dat,  spar_num_pairs)
mean_summ_inun_perc_function <-
function(rasterstack){
summ_inu_pct <- rasterstack$summ_inu_pct
#make a weight matrix with the focalWeight function.
buffer_radius <- 5
fw_5m <- focalWeight(summ_inu_pct, buffer_radius, type = "circle")
#recale weight matrix to 1/0 for calculations
fw_5m <- ifelse(fw_5m>0,1,0)
#mean value for percent of summer inundated
mean_summ_inu_pct <- focal(summ_inu_pct, w = fw_5m, fun = mean, na.rm = TRUE)
names(mean_summ_inu_pct) <- "mean_summ_inu_pct"
return(mean_summ_inu_pct)
}
load("C:/Users/JennyT/Documents/LitReview/UCI/working data/bss_mdl.rda")
#2015 baseline year for validation with Delft3d
inun_metrics_2015_delft3D  <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/__2015_delft3D_inun_metrics_.grd")
values(inun_metrics_2015_delft3D$summ_inu_pct) <- ifelse(values(inun_metrics_2015_delft3D$summ_inu_pct>0.292122), NA, values(inun_metrics_2015_delft3D$summ_inu_pct))
inun_metrics_2015_delft3D <- mean_summ_inun_perc_function(inun_metrics_2015_delft3D)
bss_predict_2015_delft3D <- raster::predict(object = inun_metrics_2015_delft3D, bss_mdl, type = "response")
plot(bss_predict_2015_delft3D)
load("C:/Users/JennyT/Documents/LitReview/UCI/working data/bss_pt_fullmarsh.RData")
bss_pt_fullmarsh <- st_transform(bss_pt_fullmarsh, crs = crs(bss_predict_2015_delft3D))
crs(bss_pt_fullmarsh)
bss_pt_fullmarsh <- cbind(bss_pt_fullmarsh, raster::extract(x = bss_predict_2015_delft3D, y = bss_pt_fullmarsh))
names(bss_pt_fullmarsh)[5] <- "Predicted_Prob"
ggplot(data = bss_pt_fullmarsh, mapping = aes(x = as.factor(spar_num_pairs), y = Predicted_Prob))+
geom_boxplot()
table(bss_pt_fullmarsh$spar_num_pairs)
inun_metrics_2100_dre_RCP8_elnino  <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/_2100_dredge_RCP8_elnino_inun_metrics_.grd")
inun_metrics_2100_ND_RCP8_elnino <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/_2100_ND_RCP8_elnino_inun_metrics_.grd")
bss_predict_2100_ND_RCP8_elnino <- raster::predict(object = inun_metrics_2100_ND_RCP8_elnino, bss_mdl, type = "response")
plot(bss_predict_2100_ND_RCP8_elnino)
names(_2100_ND_RCP8_elnino_inun_metrics_)
names(inun_metrics_2100_ND_RCP8_elnino)
summary(bss_mdl <- glm(data = dat, family = "binomial", spar_num_pairs ~ mean_summ_inu_pct + summ_inu_pct))
ggplot(data = dat, mapping = aes(x = as.factor(spar_num_pairs), y = mean_summ_inu_pct))+
geom_violin()+
geom_boxplot(width = .2)
#2015 baseline year for validation with Delft3d
inun_metrics_2015_delft3D  <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/__2015_delft3D_inun_metrics_.grd")
values(inun_metrics_2015_delft3D$summ_inu_pct) <- ifelse(values(inun_metrics_2015_delft3D$summ_inu_pct>0.292122), NA, values(inun_metrics_2015_delft3D$summ_inu_pct))
inun_metrics_2015_delft3D <- mean_summ_inun_perc_function(inun_metrics_2015_delft3D)
bss_predict_2015_delft3D <- raster::predict(object = inun_metrics_2015_delft3D, bss_mdl, type = "response")
summary(bss_mdl <- glm(data = dat, family = "binomial", spar_num_pairs ~ mean_summ_inu_pct))
#2015 baseline year for validation with Delft3d
inun_metrics_2015_delft3D  <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/__2015_delft3D_inun_metrics_.grd")
values(inun_metrics_2015_delft3D$summ_inu_pct) <- ifelse(values(inun_metrics_2015_delft3D$summ_inu_pct>0.292122), NA, values(inun_metrics_2015_delft3D$summ_inu_pct))
inun_metrics_2015_delft3D <- mean_summ_inun_perc_function(inun_metrics_2015_delft3D)
bss_predict_2015_delft3D <- raster::predict(object = inun_metrics_2015_delft3D, bss_mdl, type = "response")
plot(bss_predict_2015_delft3D)
load("C:/Users/JennyT/Documents/LitReview/UCI/working data/bss_pt_fullmarsh.RData")
bss_pt_fullmarsh <- st_transform(bss_pt_fullmarsh, crs = crs(bss_predict_2015_delft3D))
crs(bss_pt_fullmarsh)
bss_pt_fullmarsh <- cbind(bss_pt_fullmarsh, raster::extract(x = bss_predict_2015_delft3D, y = bss_pt_fullmarsh))
names(bss_pt_fullmarsh)[5] <- "Predicted_Prob"
ggplot(data = bss_pt_fullmarsh, mapping = aes(x = as.factor(spar_num_pairs), y = Predicted_Prob))+
geom_boxplot()
#2015 baseline year for validation with Delft3d
inun_metrics_2015_delft3D  <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/__2015_delft3D_inun_metrics_.grd")
values(inun_metrics_2015_delft3D$summ_inu_pct) <- ifelse(values(inun_metrics_2015_delft3D$summ_inu_pct>0.292122), NA, values(inun_metrics_2015_delft3D$summ_inu_pct))
inun_metrics_2015_delft3D <- mean_summ_inun_perc_function(inun_metrics_2015_delft3D)
bss_predict_2015_delft3D <- raster::predict(object = inun_metrics_2015_delft3D, bss_mdl, type = "response")
plot(bss_predict_2015_delft3D)
bss_pt_fullmarsh <- st_transform(bss_pt_fullmarsh, crs = crs(bss_predict_2015_delft3D))
crs(bss_pt_fullmarsh)
bss_pt_fullmarsh <- cbind(bss_pt_fullmarsh, raster::extract(x = bss_predict_2015_delft3D, y = bss_pt_fullmarsh))
names(bss_pt_fullmarsh)[5] <- "Predicted_Prob"
ggplot(data = bss_pt_fullmarsh, mapping = aes(x = as.factor(spar_num_pairs), y = Predicted_Prob))+
geom_boxplot()
dat$hab_avail <- rank(dat$summ_inu_pct)/nrow(dat)
plot(dat$summ_inu_pct, dat$hab_avail)
names(dat)
dat <- dat %>% select(1:7, 9, 8)
num<-5:8
bss_dat <- data.frame(dat)
bss_pval<-NULL
for (i in num){
mod <- glm(spar_num_pairs ~ bss_dat[,i] , family= "binomial", data= bss_dat)
bss_pval <- rbind(bss_pval, data.frame("pval"= coef(summary(mod))[2,4], "variable"= names(bss_dat[i])))
}
bss_pval <- bss_pval[order(bss_pval$pval),]
summary(bss_mdl <- glm(data = dat, family = "binomial", spar_num_pairs ~ mean_summ_inu_pct + hab_avail))
length(unique(dat$summ_inu_pct))
summary(bss_mdl <- glm(data = dat, family = "binomial", spar_num_pairs ~ mean_summ_inu_pct))
inun_metrics_2100_dre_RCP8_elnino  <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/_2100_dredge_RCP8_elnino_inun_metrics_.grd")
inun_metrics_2100_ND_RCP8_elnino <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/_2100_ND_RCP8_elnino_inun_metrics_.grd")
bss_predict_2100_ND_RCP8_elnino <- raster::predict(object = inun_metrics_2100_ND_RCP8_elnino, bss_mdl, type = "response")
inun_metrics_2100_ND_RCP8_elnino <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/_2100_ND_RCP8_elnino_inun_metrics_.grd")
values(inun_metrics_2100_ND_RCP8_elnino$summ_inu_pct) <- ifelse(values(inun_metrics_2100_ND_RCP8_elnino$summ_inu_pct>0.292122), NA, values(inun_metrics_2100_ND_RCP8_elnino$summ_inu_pct))
inun_metrics_2100_ND_RCP8_elnino <- mean_summ_inun_perc_function(inun_metrics_2100_ND_RCP8_elnino)
bss_predict_2100_ND_RCP8_elnino <- raster::predict(object = inun_metrics_2100_ND_RCP8_elnino, bss_mdl, type = "response")
plot(bss_predict_2100_ND_RCP8_elnino)
ggplot(data = dat, mapping = aes(x = mean_summ_inu_pct, y = spar_num_pairs))+
geom_smooth(method = "glm",
method.args = list(family = "binomial"))
ggplot(data = dat, mapping = aes(x = mean_summ_inu_pct, y = spar_num_pairs))+
geom_smooth(method = "glm",
method.args = list(family = "binomial"))+
geom_point()
ggplot(data = dat, mapping = aes(x = mean_summ_inu_pct, y = spar_num_pairs))+
geom_smooth(method = "glm",
method.args = list(family = "binomial"))+
geom_point(alpha = 0.2)
ggplot(data = dat, mapping = aes(x = mean_summ_inu_pct, y = spar_num_pairs))+
geom_smooth(method = "glm", formula = x ~ y + I(y^2))
ggplot(data = dat, mapping = aes(x = mean_summ_inu_pct, y = spar_num_pairs))+
geom_smooth(method = "lm", formula = x ~ y + I(y^2))
ggplot(data = dat, mapping = aes(x = mean_summ_inu_pct, y = spar_num_pairs))+
geom_smooth(method = "lm", formula = x ~ y + I(y)^2)
ggplot(data = dat, mapping = aes(x = mean_summ_inu_pct, y = spar_num_pairs))+
geom_smooth(method = "lm", formula = x ~ y + I(y^2))
ggplot(data = dat, mapping = aes(x = mean_summ_inu_pct, y = spar_num_pairs))+
geom_smooth(method = "lm", formula = x ~ y + I(y^2))
ggplot(data = dat, mapping = aes(x = mean_summ_inu_pct, y = spar_num_pairs))+
geom_smooth(method = "lm", formula = y ~ x + I(x^2))
ggplot(data = dat, mapping = aes(x = mean_summ_inu_pct, y = spar_num_pairs))+
geom_smooth(method = "lm", formula = y ~ x + I(x^2))+
geom_point(alpha = 0.2)
ggplot(data = dat, mapping = aes(x = mean_summ_inu_pct, y = spar_num_pairs))+
geom_smooth(method = "glm",
method.args = list(family = "binomial"))+
geom_point(alpha = 0.2)
#Bss location data
load("C:/Users/JennyT/Documents/LitReview/UCI/working data/FinalData/rail_beld_elv_veg.RData")
bss_dat <- dat %>%
dplyr::select(UID:spar_num_pairs) %>%
filter(year == 2015)
rm(dat)
#read in UNB file to make the bird data spatial
UNB <- st_read("C:/Users/JennyT/Documents/LitReview/UCI/working data/FinalData/UNB_Grid.shp")
bss_dat <- left_join(UNB, bss_dat, by = "UID")
plot(bss_dat["spar_num_pairs"], main = "BSS Occupancy (2015)", key.pos = 1,
key.width = lcm(1.3), key.length = 0.5)
View(bss_dat)
zero_pts <- SpatialPointsDataFrame(gCentroid(as(bss_dat, "Spatial"), byid = TRUE), data = data.frame(bss_dat)) #use the bss_dat before cropping
plot(zero_pts[zero_pts$spar_num_pairs==0,])
zero_pts <- st_as_sf(zero_pts) %>%
filter(spar_num_pairs == 0) %>%
dplyr::select(marsh, year, spar_num_pairs)
zero_pts[,"Species"] <- "Belding's Savannah Sparrow"
plot(zero_pts['spar_num_pairs'])
bss_pt <- st_read("C:/Users/JennyT/Documents/LitReview/UCI/working data/RailBeldData_pt.shp") %>%
dplyr::select(year, Species, marsh) %>%
filter(year == 2015, marsh == "Upper Newport Bay", Species == "Belding's Savannah Sparrow")
bss_pt <- st_transform(bss_pt, crs = crs(zero_pts))
View(bss_pt)
bss_pt[,"spar_num_pairs"] <- 1
View(zero_pts)
View(UNB)
View(bss_pt)
View(bss_dat)
bss_pt <- rbind(bss_pt, zero_pts)
plot(bss_pt["spar_num_pairs"])
zero_pts <- SpatialPointsDataFrame(gCentroid(as(bss_dat, "Spatial"), byid = TRUE), data = data.frame(bss_dat)) #use the bss_dat before cropping
plot(zero_pts)
plot(zero_pts["spar_num_pairs"])
plot(zero_pts$spar_num_pairs)
plot(zero_pts['spar_num_pairs'])
bss_pt <- st_read("C:/Users/JennyT/Documents/LitReview/UCI/working data/RailBeldData_pt.shp") %>%
dplyr::select(year, Species, marsh) %>%
filter(year == 2015, marsh == "Upper Newport Bay", Species == "Belding's Savannah Sparrow")
View(bss_pt)
plot(bss_pt)
bss_pt <- st_read("C:/Users/JennyT/Documents/LitReview/UCI/working data/RailBeldData_pt.shp")
#Bss location data
load("C:/Users/JennyT/Documents/LitReview/UCI/working data/FinalData/rail_beld_elv_veg.RData")
bss_dat <- dat %>%
dplyr::select(UID:spar_num_pairs) %>%
filter(year == 2015)
rm(dat)
#read in UNB file to make the bird data spatial
UNB <- st_read("C:/Users/JennyT/Documents/LitReview/UCI/working data/FinalData/UNB_Grid.shp")
bss_dat <- left_join(UNB, bss_dat, by = "UID")
plot(bss_dat["spar_num_pairs"], main = "BSS Occupancy (2015)", key.pos = 1,
key.width = lcm(1.3), key.length = 0.5)
zero_pts <- SpatialPointsDataFrame(gCentroid(as(bss_dat, "Spatial"), byid = TRUE), data = data.frame(bss_dat)) #use the bss_dat before cropping
plot(zero_pts[zero_pts$spar_num_pairs==0,])
zero_pts <- st_as_sf(zero_pts) %>%
filter(spar_num_pairs == 0) %>%
dplyr::select(marsh, year, spar_num_pairs)
zero_pts[,"Species"] <- "Belding's Savannah Sparrow"
plot(zero_pts['spar_num_pairs'])
bss_pt <- st_read("C:/Users/JennyT/Documents/LitReview/UCI/working data/RailBeldData_pt.shp") %>%
dplyr::select(year, Species, marsh) %>%
filter(year == 2015, marsh == "Upper Newport Bay", Species == "Belding's Savannah Sparrow")
bss_pt <- st_transform(bss_pt, crs = crs(zero_pts))
bss_pt[,"spar_num_pairs"] <- 1
bss_pt <- rbind(bss_pt, zero_pts)
plot(bss_pt["spar_num_pairs"])
bss_pt_fullmarsh <- bss_pt
save(bss_pt_fullmarsh, file = "C:/Users/JennyT/Documents/LitReview/UCI/working data/bss_pt_fullmarsh.RData")
#crop the bird data to be just where veg data is
veg_boundary <- st_read("C:/Users/JennyT/Documents/LitReview/UCI/working data/UNB Vegetation/Veg_boundary.shp")
veg_boundary <- as(veg_boundary, "Spatial") #veg boundary convert to spatial object
bird_dat_sp <- as(bss_pt, "Spatial")#convert bird object to spatial for cropping
veg_boundary <- spTransform(veg_boundary, CRSobj = crs(bird_dat_sp))
bird_dat_sp <- raster::crop(bird_dat_sp,veg_boundary ) #crop to extent
plot(bird_dat_sp)
bss_pt <- st_as_sf(bird_dat_sp)
plot(bss_pt["spar_num_pairs"]) #this is presence and absence BSS file for model training!!!
save(bss_pt, file = "C:/Users/JennyT/Documents/LitReview/UCI/working data/bss_pt.RData")
load("C:/Users/JennyT/Documents/LitReview/UCI/working data/bss_pt.RData")
inun_metrics_13 <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/_2013_inun_metrics_.grd")
inun_metrics_14 <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/_2014_inun_metrics_.grd")
inun_metrics_15 <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/_2015_inun_metrics_.grd")
summ_inu_pct_15 <- inun_metrics_15$summ_inu_pct
#make a weight matrix with the focalWeight function.
buffer_radius <- 5
fw_5m <- focalWeight(summ_inu_pct_15, buffer_radius, type = "circle")
#recale weight matrix to 1/0 for calculations
fw_5m <- ifelse(fw_5m>0,1,0)
#mean value for percent of summer inundated
mean_summ_inu_pct_15 <- focal(summ_inu_pct_15, w = fw_5m, fun = mean, na.rm = TRUE)
#95th percentile
#function for 95th percentile
nintyfifthpercentile <- function(x,...){
d <- quantile(x, probs = 0.95, na.rm = TRUE)
return(d)
}
ninyfifthperc_summ_inu__pct_15 <- focal(summ_inu_pct_15, w = fw_5m, fun = nintyfifthpercentile, na.rm = TRUE)
dat <- cbind(bss_pt, raster::extract(x = mean_summ_inu_pct_15, y = bss_pt))
dat <- cbind(dat, raster::extract(x = ninyfifthperc_summ_inu__pct_15, y = bss_pt))
dat <- cbind(dat, raster::extract(x = summ_inu_pct_15, y = bss_pt))
names(dat)[5:7] <-c("mean_summ_inu_pct", "ntyfth_summ_inu_pct", "summ_inu_pct")
ggplot(data = dat, mapping = aes(x = ntyfth_summ_inu_pct, fill = as.factor(spar_num_pairs)))+
geom_histogram(position = "stack")
save(dat, file = "C:/Users/JennyT/Documents/LitReview/UCI/working data/bss_training_data.RData")
num<-5:7
bss_dat <- data.frame(dat)
bss_pval<-NULL
for (i in num){
mod <- glm(spar_num_pairs ~ bss_dat[,i] , family= "binomial", data= bss_dat)
bss_pval <- rbind(bss_pval, data.frame("pval"= coef(summary(mod))[2,4], "variable"= names(bss_dat[i])))
}
bss_pval <- bss_pval[order(bss_pval$pval),]
summary(bss_mdl <- glm(data = dat, family = "binomial", spar_num_pairs ~ mean_summ_inu_pct))
save(bss_mdl, file = "C:/Users/JennyT/Documents/LitReview/UCI/working data/bss_mdl.rda")
ggplot(data = dat, mapping = aes(x = mean_summ_inu_pct, y = spar_num_pairs))+
geom_smooth(method = "glm",
method.args = list(family = "binomial"))+
geom_point(alpha = 0.2)
ggplot(data = dat, mapping = aes(x = as.factor(spar_num_pairs), y = mean_summ_inu_pct))+
geom_violin()+
geom_boxplot(width = .2)
count(dat,  spar_num_pairs)
mean_summ_inun_perc_function <-
function(rasterstack){
summ_inu_pct <- rasterstack$summ_inu_pct
#make a weight matrix with the focalWeight function.
buffer_radius <- 5
fw_5m <- focalWeight(summ_inu_pct, buffer_radius, type = "circle")
#recale weight matrix to 1/0 for calculations
fw_5m <- ifelse(fw_5m>0,1,0)
#mean value for percent of summer inundated
mean_summ_inu_pct <- focal(summ_inu_pct, w = fw_5m, fun = mean, na.rm = TRUE)
names(mean_summ_inu_pct) <- "mean_summ_inu_pct"
return(mean_summ_inu_pct)
}
load("C:/Users/JennyT/Documents/LitReview/UCI/working data/bss_mdl.rda")
#2015 baseline year for validation with Delft3d
inun_metrics_2015_delft3D  <- stack("C:/Users/JennyT/Documents/LitReview/UCI/working data/__2015_delft3D_inun_metrics_.grd")
values(inun_metrics_2015_delft3D$summ_inu_pct) <- ifelse(values(inun_metrics_2015_delft3D$summ_inu_pct>0.292122), NA, values(inun_metrics_2015_delft3D$summ_inu_pct))
inun_metrics_2015_delft3D <- mean_summ_inun_perc_function(inun_metrics_2015_delft3D)
bss_predict_2015_delft3D <- raster::predict(object = inun_metrics_2015_delft3D, bss_mdl, type = "response")
plot(bss_predict_2015_delft3D)
load("C:/Users/JennyT/Documents/LitReview/UCI/working data/bss_pt_fullmarsh.RData")
bss_pt_fullmarsh <- st_transform(bss_pt_fullmarsh, crs = crs(bss_predict_2015_delft3D))
crs(bss_pt_fullmarsh)
bss_pt_fullmarsh <- cbind(bss_pt_fullmarsh, raster::extract(x = bss_predict_2015_delft3D, y = bss_pt_fullmarsh))
names(bss_pt_fullmarsh)[5] <- "Predicted_Prob"
ggplot(data = bss_pt_fullmarsh, mapping = aes(x = as.factor(spar_num_pairs), y = Predicted_Prob))+
geom_boxplot()
